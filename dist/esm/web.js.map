{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,iBAAiB,CAAC;AAG1C,OAAO,EAAC,6BAA6B,EAAE,wBAAwB,EAAE,uBAAuB,EAAC,MAAM,eAAe,CAAC;AAE/G,MAAM,OAAO,eAAgB,SAAQ,SAAS;IAC5C,KAAK,CAAC,MAAM;QACV,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IACD,KAAK,CAAC,MAAM;QACV,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IACD,KAAK,CAAC,aAAa;QACjB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC/B,CAAC;IACD,KAAK,CAAC,KAAK;QACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC;IACD,KAAK,CAAC,QAAQ;QACZ,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC;IACD,KAAK,CAAC,WAAW;QACf,OAAO;YACL,WAAW,EAAE,uBAAuB,CAAC,6BAA6B;YAClE,cAAc,EAAE,EAAE;YAClB,OAAO,EAAE,CAAC;YACV,YAAY,EAAE,wBAAwB,CAAC,iBAAiB;YACxD,WAAW,EAAE,6BAA6B,CAAC,IAAI;SAChD,CAAC;IACJ,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,OAAsC;QACtD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO;YACL,WAAW,EAAE,uBAAuB,CAAC,6BAA6B;YAClE,cAAc,EAAE,EAAE;YAClB,OAAO,EAAE,CAAC;YACV,YAAY,EAAE,wBAAwB,CAAC,iBAAiB;YACxD,WAAW,EAAE,6BAA6B,CAAC,IAAI;SAChD,CAAC;IACJ,CAAC;CACF","sourcesContent":["import {WebPlugin} from '@capacitor/core';\n\nimport type {DensoScannerPlugin, DensoScannerSettings} from './definitions';\nimport {DensoScannerAttachConnectMode, DensoScannerPolarization, DensoScannerTriggerMode} from './definitions';\n\nexport class DensoScannerWeb extends WebPlugin implements DensoScannerPlugin {\n  async attach(): Promise<void> {\n    console.log('attach');\n  }\n  async detach(): Promise<void> {\n    console.log('detach');\n  }\n  async openInventory(): Promise<void> {\n    console.log('openInventory');\n  }\n  async close(): Promise<void> {\n    console.log('stopScan');\n  }\n  async pullData(): Promise<void> {\n    console.log('pullData');\n  }\n  async getSettings(): Promise<DensoScannerSettings> {\n    return {\n      triggerMode: DensoScannerTriggerMode.RFID_TRIGGER_MODE_CONTINUOUS1,\n      powerLevelRead: 30,\n      session: 0,\n      polarization: DensoScannerPolarization.POLARIZATION_BOTH,\n      connectMode: DensoScannerAttachConnectMode.AUTO,\n    };\n  }\n  async setSettings(options: Partial<DensoScannerSettings>): Promise<DensoScannerSettings> {\n    console.log(options);\n    return {\n      triggerMode: DensoScannerTriggerMode.RFID_TRIGGER_MODE_CONTINUOUS1,\n      powerLevelRead: 30,\n      session: 0,\n      polarization: DensoScannerPolarization.POLARIZATION_BOTH,\n      connectMode: DensoScannerAttachConnectMode.AUTO,\n    };\n  }\n}\n"]}